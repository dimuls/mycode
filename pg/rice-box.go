// Code generated by rice embed-go; DO NOT EDIT.
package pg

import (
	"time"

	"github.com/GeertJohan/go.rice/embedded"
)

func init() {

	// define files
	file2 := &embedded.EmbeddedFile{
		Filename:    "0001_init.down.sql",
		FileModTime: time.Unix(1602598545, 0),

		Content: string("drop table solution_test;\ndrop table test;\ndrop table solution;\ndrop table student_exercise;\ndrop table student;\ndrop table class;\ndrop table exercise;\ndrop table teacher;\ndrop table \"user\";"),
	}
	file3 := &embedded.EmbeddedFile{
		Filename:    "0001_init.up.sql",
		FileModTime: time.Unix(1604105463, 0),

		Content: string("create table \"user\" (\n    id bigserial primary key,\n    login text not null unique,\n    password_hash bytea not null\n);\n\ncreate table teacher (\n    id bigserial primary key,\n    user_id bigint not null references \"user\" (id) on delete cascade,\n    name text not null\n);\n\ncreate index on teacher (user_id);\n\ncreate table class (\n    id bigserial primary key,\n    teacher_id bigint not null references teacher (id) on delete cascade,\n    name text not null\n);\n\ncreate index on class (teacher_id);\n\ncreate table student (\n    id bigserial primary key,\n    user_id bigint not null references \"user\" (id) on delete cascade,\n    class_id bigint not null references class (id) on delete cascade,\n    name text not null\n);\n\ncreate index on student (user_id);\ncreate index on student (class_id);\n\ncreate table exercise (\n    id bigserial primary key,\n    teacher_id bigint not null references teacher (id) on delete cascade,\n    title text not null,\n    description text not null,\n    language int not null,\n    estimator int not null\n);\n\ncreate index on exercise (teacher_id);\n\ncreate table test (\n    id bigserial primary key,\n    exercise_id bigint not null references exercise(id) on delete cascade,\n    type text not null,\n    name text not null,\n    max_duration text not null,\n    max_memory text not null,\n    stdin text not null,\n    expected_stdout text,\n    checker_language int,\n    checker_source text\n);\n\ncreate index on test (exercise_id);\n\ncreate table student_exercise (\n    student_id bigint not null references student (id) on delete cascade,\n    exercise_id bigint not null references exercise (id) on delete cascade,\n\n    primary key (student_id, exercise_id)\n);\n\ncreate index on student_exercise (exercise_id, student_id);\n\ncreate table solution (\n    id bigserial primary key,\n    student_id bigint not null references student (id) on delete cascade,\n    exercise_id bigint not null references exercise (id) on delete cascade,\n    source text not null,\n\n    foreign key (student_id, exercise_id) references\n        student_exercise (student_id, exercise_id) on delete cascade\n);\n\ncreate index on solution (student_id);\ncreate index on solution (exercise_id);\n\ncreate table solution_test (\n    id bigserial primary key,\n    solution_id bigint not null references solution (id) on delete cascade,\n    test_id bigint not null references test (id) on delete cascade,\n    status text not null,\n    duration text,\n    used_memory text,\n    stdout text,\n    stderr text,\n    checker_stdout text,\n    checker_stderr text,\n    fails jsonb\n);\n\ncreate index on solution_test (solution_id);\ncreate index on solution_test (test_id);\n"),
	}

	// define dirs
	dir1 := &embedded.EmbeddedDir{
		Filename:   "",
		DirModTime: time.Unix(1602947543, 0),
		ChildFiles: []*embedded.EmbeddedFile{
			file2, // "0001_init.down.sql"
			file3, // "0001_init.up.sql"

		},
	}

	// link ChildDirs
	dir1.ChildDirs = []*embedded.EmbeddedDir{}

	// register embeddedBox
	embedded.RegisterEmbeddedBox(`migrations`, &embedded.EmbeddedBox{
		Name: `migrations`,
		Time: time.Unix(1602947543, 0),
		Dirs: map[string]*embedded.EmbeddedDir{
			"": dir1,
		},
		Files: map[string]*embedded.EmbeddedFile{
			"0001_init.down.sql": file2,
			"0001_init.up.sql":   file3,
		},
	})
}
